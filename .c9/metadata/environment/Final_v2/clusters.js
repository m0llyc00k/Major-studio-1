{"changed":true,"filter":false,"title":"clusters.js","tooltip":"/Final_v2/clusters.js","value":"/* global d3 */\n\nvar w = 1400,\n    h = 800;\n\nvar radius = 12;\nvar color = d3.scaleOrdinal()\n    .domain([\"buttons\", \"signs\", \"posters\", \"placards\", \"correspondence\", \"pamphlets\", \"fliers\", \"other\"])\n    .range(['#d4c874', '#ba8a30', '#db666f', '#5c86aa', '#a53d24', '#76943c', '#66988d', '#ba5f41']);\n\nvar centerScale = d3.scalePoint().padding(1).range([0, w]);\nvar forceStrength = 0.08;\n\nvar svg2 = d3.select(\"#svgclusters\").append(\"svg\")\n    .attr(\"width\", w)\n    .attr(\"height\", h)\n    .attr(\"viewBox\", `0 0 1400 800`)\n    .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n    \n\n\nvar simulation = d3.forceSimulation()\n    .force(\"collide\", d3.forceCollide(function(d) {\n        return d.r + 2\n    }).iterations(10))\n    .force(\"charge\", d3.forceManyBody())\n    .force(\"y\", d3.forceY().y(h / 2))\n    .force(\"x\", d3.forceX().x(w / 2))\n\nd3.csv(\"beeswarm-data-new-rev_nov20.csv\").then(function(data) {\n\n    data.forEach(function(d) {\n        d.r = radius;\n        d.x = w / 2;\n        d.y = h / 2;\n    })\n    // data.forEach(function(d){\n    // d.r = radius;\n    // d.x = w / 2;\n    // d.y = h / 2;\n    // })\n\n    console.log(data);\n\n        var defs2 = svg2.append('defs2');\n\n        defs2.append(\"pattern\")\n            .attr(\"id\", \"d.title\")\n            .attr(\"height\", \"100%\")\n            .attr(\"width\", \"100%\")\n            .attr(\"patternContentUnits\", \"objectBoundingBox\")\n            .append(\"image\")\n            .attr(\"height\", 1)\n            .attr(\"width\", 1)\n            .attr(\"preserveAspectRatio\", \"none\")\n            .attr(\"xmlns:xlink\", \"http://www.w3.org/1999/xlink\")\n            .attr(\"xlink:href\", \"+ d.primaryImage +\")\n\n        defs2.selectAll(\".title-pattern2\")\n            .data(data)\n            .enter().append(\"pattern\")\n            .attr(\"class\", \"title-pattern2\")\n            .attr(\"id\", function(d) {\n                return d.id\n            })\n            .attr(\"height\", \"100%\")\n            .attr(\"width\", \"100%\")\n            .attr(\"patternContentUnits\", \"objectBoundingBox\")\n            .append(\"image\")\n            .attr(\"height\", 1)\n            .attr(\"width\", 1)\n            .attr(\"preserveAspectRatio\", \"none\")\n            .attr(\"xmlns:xlink\", \"http://www.w3.org/1999/xlink\")\n            .attr(\"xlink:href\", function(d) {\n                return d.primaryImage\n            })\n\n\n    d3.selectAll(\"circle\")\n        .on(\"mouseover\", handleMouseOver)\n        .on(\"mouseout\", handleMouseOut);\n\n    function handleMouseOver(d, i) { // Add interactivity\n\n        // Use D3 to select element, change size\n        d3.select(this)\n            .attr(\"r\", 45)\n            .attr(\"fill\", function(d) {\n                return \"url(#\" + d.id + \")\"\n            })\n    };\n\n    function handleMouseOut(d, i) {\n        // Use D3 to select element, change color back to normal\n        d3.select(this)\n            .attr(\"r\", 12)\n            \n            tooltip.style(\"opacity\", 0);\n            xLine.attr(\"opacity\", 0);\n    };\n\n    var circles = svg2.selectAll(\"circle\")\n        .data(data, function(d) { return d.id; });\n\n    var circlesEnter = circles.enter().append(\"circle\")\n        .attr(\"r\", function(d, i) { return d.r; })\n        .attr(\"cx\", function(d, i) { return 175 + 25 * i + 2 * i ** 5; })\n        .attr(\"cy\", function(d, i) { return 500; })\n        .style(\"fill\", function(d, i) { return color(d.typeSort); })\n        .style(\"stroke\", function(d, i) { return color(d.typeSort); })\n        .style(\"stroke-width\", 3)\n        .style(\"pointer-events\", \"all\")\n        .style(\"padding\", \"none\")\n        .on(\"mouseover\", handleMouseOver)\n        .on(\"mouseout\", handleMouseOut)\n        .call(d3.drag()\n            .on(\"start\", dragstarted)\n            .on(\"drag\", dragged)\n            .on(\"end\", dragended));\n\n    circles = circles.merge(circlesEnter)\n\n    function ticked() {\n        //console.log(\"tick\")\n        //console.log(data.map(function(d){ return d.x; }));\n        circles\n            .attr(\"cx\", function(d) { return d.x; })\n            .attr(\"cy\", function(d) { return d.y; });\n    }\n\n    simulation\n        .nodes(data)\n        .on(\"tick\", ticked);\n\n    function dragstarted(d, i) {\n        //console.log(\"dragstarted \" + i)\n        if (!d3.event.active) simulation.alpha(1).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n    }\n\n    function dragged(d, i) {\n        //console.log(\"dragged \" + i)\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n    }\n\n\n    function dragended(d, i) {\n        //console.log(\"dragended \" + i)\n        if (!d3.event.active) simulation.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n        var me = d3.select(this)\n        console.log(me.classed(\"selected\"))\n        me.classed(\"selected\", !me.classed(\"selected\"))\n\n        d3.selectAll(\"circle\")\n            .style(\"fill\", function(d, i) { return color(d.typeSort); })\n\n        d3.selectAll(\"circle.selected\")\n                .style(\"fill\", function(d) {\n                return \"url(#\" + d.id + \")\"\n            })\n\n    }\n\n    function groupBubbles() {\n        hideTitles();\n\n        // @v4 Reset the 'x' force to draw the bubbles to the center.\n        // simulation.force('x', d3.forceX().strength(forceStrength).x(w / 4));\n        simulation.force('x', d3.forceX().strength(.05));\n\n\n\n        // @v4 We can reset the alpha value and restart the simulation\n        simulation.alpha(1).restart();\n    }\n\n    function splitBubbles(byVar) {\n\n        centerScale.domain(data.map(function(d) { return d[byVar]; }));\n\n        if (byVar == \"id\") {\n            hideTitles()\n        }\n        else {\n            showTitles(byVar, centerScale);\n        }\n\n        // @v4 Reset the 'x' force to draw the bubbles to their year centers\n        simulation.force('x', d3.forceX().strength(forceStrength).x(function(d) {\n            return centerScale(d[byVar]);\n        }));\n\n        // @v4 We can reset the alpha value and restart the simulation\n        simulation.alpha(2).restart();\n    }\n\n    function hideTitles() {\n        svg2.selectAll('.title').remove();\n    }\n\n    function showTitles(byVar, scale) {\n        // Another way to do this would be to create\n        // the year texts once and then just hide them.\n        var titles = svg2.selectAll('.title')\n            .data(scale.domain());\n\n        titles.enter().append('text')\n            .attr('class', 'title')\n            .merge(titles)\n            .attr('x', function(d) { return scale(d); })\n            .attr('y', 60)\n            .attr('text-anchor', 'middle')\n            .text(function(d) { return d; })\n\n\n        titles.exit().remove()\n    }\n\n\n\n    function setupButtons() {\n        d3.selectAll('.button')\n            .on('click', function() {\n\n                // Remove active class from all buttons\n                d3.selectAll('.button').classed('active', false);\n                // Find the button just clicked\n                var button = d3.select(this);\n\n                // Set it as the active button\n                button.classed('active', true);\n\n                // Get the id of the button\n                var buttonId = button.attr('id');\n\n                console.log(buttonId)\n                // Toggle the bubble chart based on\n                // the currently clicked button.\n                splitBubbles(buttonId);\n            });\n    }\n\n    setupButtons()\n\n})\n","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":147,"column":0},"end":{"row":148,"column":0},"action":"remove","lines":["",""],"id":1},{"start":{"row":146,"column":0},"end":{"row":147,"column":0},"action":"remove","lines":["",""]}]]},"ace":{"folds":[],"scrolltop":2088.5,"scrollleft":0,"selection":{"start":{"row":103,"column":0},"end":{"row":103,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":277,"mode":"ace/mode/javascript"}},"timestamp":1638048067721}